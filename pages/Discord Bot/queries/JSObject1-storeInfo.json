{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "storeInfo",
    "fullyQualifiedName": "JSObject1.storeInfo",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Discord Bot",
    "collectionId": "Discord Bot_JSObject1",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n  await storeValue('webhook_url', webhook_url.text);\n  await storeValue('repo_name', repo_name.text);\n  await storeValue('github_username', github_username.text);\n  await storeValue('access_token', access_token.text);\n  showAlert('APIs have been set! You can now close the Modal');\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n  await storeValue('webhook_url', webhook_url.text);\n  await storeValue('repo_name', repo_name.text);\n  await storeValue('github_username', github_username.text);\n  await storeValue('access_token', access_token.text);\n  showAlert('APIs have been set! You can now close the Modal');\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Discord Bot_JSObject1.storeInfo",
  "deleted": false,
  "gitSyncId": "62b4b2de20ae3225cef16a4e_62b608f620ae3225cef1d069"
}